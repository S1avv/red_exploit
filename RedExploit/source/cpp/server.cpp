#include <iostream>
#include <cstring>
#include <winsock2.h>
#include <ws2tcpip.h>

#pragma comment(lib, "ws2_32.lib")

int port = port;

int main() {
    WSADATA wsaData;
    int iResult;

    iResult = WSAStartup(MAKEWORD(2, 2), &wsaData);

    SOCKET listenSocket = socket(AF_INET, SOCK_STREAM, IPPROTO_TCP);

    sockaddr_in serverAddr;
    serverAddr.sin_family = AF_INET;
    serverAddr.sin_addr.s_addr = htonl(INADDR_ANY);
    serverAddr.sin_port = htons(port);

    iResult = bind(listenSocket, (SOCKADDR*)&serverAddr, sizeof(serverAddr));

    std::cout << "Server listening on port " << port << std::endl;

    SOCKET clientSocket;
    sockaddr_in clientAddr;
    int clientAddrSize = sizeof(clientAddr);

    clientSocket = accept(listenSocket, (SOCKADDR*)&clientAddr, &clientAddrSize);
    if (clientSocket == INVALID_SOCKET) {
        closesocket(listenSocket);
        WSACleanup();
        return 1;
    }

    char clientIp[INET_ADDRSTRLEN];
    inet_ntop(AF_INET, &clientAddr.sin_addr, clientIp, INET_ADDRSTRLEN);
    std::cout << "Client connected: " << clientIp << ":" << ntohs(clientAddr.sin_port) << std::endl;

    while (true) {
        std::cout << "Enter command to send to client: ";
        std::string command;
        std::getline(std::cin, command);

        if (send(clientSocket, command.c_str(), command.length(), 0) == SOCKET_ERROR) {
            std::cerr << "Send failed: " << WSAGetLastError() << std::endl;
            closesocket(clientSocket);
            WSACleanup();
            return 1;
        }

        char recvbuf[4096];
        int recvbuflen = 4096;
        iResult = recv(clientSocket, recvbuf, recvbuflen, 0);
        if (iResult > 0) {
            recvbuf[iResult] = '\0';
            std::cout << "Response from client: " << recvbuf << std::endl;
        } else if (iResult == 0) {
            std::cout << "Connection closed by client" << std::endl;
            closesocket(clientSocket);
            break;
        } else {
            closesocket(clientSocket);
            WSACleanup();
            return 1;
        }
    }

    closesocket(listenSocket);
    WSACleanup();

    return 0;
}
